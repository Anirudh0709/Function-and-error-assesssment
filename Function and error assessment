// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract AlphaContract {
  
    uint256 public number;

   
    function setNumber(uint256 _number) public {
    
        require(_number > 0, "Number must be greater than zero");
        number = _number;
    }

   
    function doubleNumber() public {
        
        assert(number > 0);
        number *= 2;
    }


    function resetNumber() public {

        if (number % 2 != 0) {
            revert("Number must be even to reset");
        }
        number = 0;
    }
    function complexFunction(uint256 _a, uint256 _b) public pure returns (uint256) {
        require(_a > 0, "First parameter must be greater than zero");
        require(_b > 0, "Second parameter must be greater than zero");

        uint256 result = _a + _b;

        if (result % 2 != 0) {
            revert("The result must be an even number");
        }

        return result;
    }
}
